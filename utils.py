from fpdf import FPDF
import unicodedata

def clean_text(text):
    """
    Normalize text to ASCII, remove accents & non-latin chars.
    """
    return unicodedata.normalize('NFKD', text).encode('ascii', 'ignore').decode('ascii')

def generate_resume_pdf(name, email, phone, linkedin, profile, education, projects, skills, soft_skills, extras):
    pdf = FPDF()
    pdf.add_page()

    # üé® Soft pastel background (this color is ok)
    pdf.set_fill_color(248, 248, 255)
    pdf.rect(0, 0, 210, 297, 'F')

    # üìå Top header bar
    pdf.set_fill_color(52, 73, 94)
    pdf.rect(0, 0, 210, 20, 'F')

    pdf.set_text_color(255, 255, 255)
    pdf.set_font("Arial", 'B', 16)
    pdf.set_xy(10, 6)
    pdf.cell(0, 8, clean_text(name.title()), ln=True)

    pdf.set_font("Arial", '', 10)
    pdf.set_x(10)
    pdf.cell(0, 6, clean_text(f"{email} | {phone} | {linkedin}"), ln=True)
    pdf.ln(6)

    # ‚úè Helper: box section
    def box_section(title, content):
        pdf.set_fill_color(255, 255, 255)
        pdf.set_text_color(44, 62, 80)
        pdf.set_font("Arial", 'B', 12)
        pdf.multi_cell(0, 8, clean_text(f" {title} "), border=1, align='L', fill=True)
        pdf.ln(1)
        pdf.set_text_color(40, 40, 40)
        pdf.set_font("Arial", '', 11)
        pdf.set_x(12)
        pdf.multi_cell(0, 6, clean_text(content))
        pdf.ln(3)

    # üìù Add sections
    box_section("Profile Summary", profile)

    # üè´ Education formatting
    edu_lines = education.split('\n')
    clean_edu = ""
    for line in edu_lines:
        if 'at' in line:
            parts = line.split('at')
            college = parts[-1].strip()
            before = parts[0]
            branch = ""
            cgpa = ""
            year = ""
            if 'Branch:' in before:
                branch = before.split('Branch:')[-1].split(',')[0].strip()
            if 'CGPA:' in before:
                cgpa = before.split('CGPA:')[-1].split(',')[0].strip()
            if 'Year:' in before:
                year = before.split('Year:')[-1].strip()
            clean_edu += f"‚Ä¢ {college} (B.Tech {branch})\n"
            if cgpa: clean_edu += f"‚Ä¢ CGPA: {cgpa}\n"
            if year: clean_edu += f"‚Ä¢ Year of completion: {year}\n"
        else:
            clean_edu += f"{line}\n"
    box_section("Education", clean_edu.strip())

    box_section("Academic Projects", projects)
    box_section("Technical Skills", skills)
    box_section("Soft Skills", soft_skills)
    box_section("Extra-Curricular Activities", extras)

    # Footer
    pdf.set_y(-15)
    pdf.set_font("Arial", 'I', 8)
    pdf.set_text_color(120, 120, 120)
    pdf.cell(0, 10, clean_text('Generated by AI Resume Builder'), 0, 0, 'C')

    file_name = "resume.pdf"
    pdf.output(file_name)
    return file_name

def generate_cover_letter_pdf(name, email, phone, linkedin, cover_letter):
    pdf = FPDF()
    pdf.add_page()

    # Light grey bg
    pdf.set_fill_color(245, 245, 245)
    pdf.rect(0, 0, 210, 297, 'F')

    # Maroon title bar
    pdf.set_fill_color(128, 0, 0)
    pdf.rect(0, 0, 210, 20, 'F')

    pdf.set_text_color(255, 255, 255)
    pdf.set_font("Arial", 'B', 16)
    pdf.set_xy(10, 6)
    pdf.cell(0, 8, clean_text(f"{name.title()} - Cover Letter"), ln=True)

    pdf.set_font("Arial", '', 10)
    pdf.set_x(10)
    pdf.cell(0, 6, clean_text(f"{phone} | {email} | {linkedin}"), ln=True)
    pdf.ln(6)

    pdf.set_text_color(40, 40, 40)
    pdf.set_font("Arial", '', 12)
    pdf.multi_cell(0, 7, clean_text(cover_letter))

    pdf.set_y(-15)
    pdf.set_font("Arial", 'I', 8)
    pdf.set_text_color(120, 120, 120)
    pdf.cell(0, 10, clean_text('Generated by AI Resume Builder'), 0, 0, 'C')

    file_name = "cover_letter.pdf"
    pdf.output(file_name)
    return file_name